from random import randint

class Pizza:
    """
    –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –ø–∏—Ü—Ü—ã.
    –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ü–µ–ø—Ç–∞ –ø–∏—Ü—Ü—ã:
    1) –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç—ã 
    2) –Ω–∞–∑–≤–∞–Ω–∏–µ 
    3) logo
    –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –∏–Ω—Å—Ç–∞–Ω—Å–∞ –ø–∏—Ü—Ü—ã: 
    1) —Ä–∞–∑–º–µ—Ä
    –ú–µ—Ç–æ–¥—ã:
    1) –≤—ã–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–∞—Ä—å —Å–æ –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    2) –º–µ—Ç–æ–¥ __eq__
    """
    name = ""
    ingredients = []
    logo = ""

    SIZEZ = ["L", "XL"]

    def __init__(self, size = "L"):
        """
        –°–æ–∑–¥–∞–µ—Ç –∏–Ω—Å—Ç–∞–Ω—Å –ø–∏—Ü—Ü—ã –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –µ–¥–∏–Ω—Å–≤–µ–Ω–Ω—É—é —Ö–∞—Ä-–∫—É -- —Ä–∞–∑–º–µ—Ä
        """
        if size.upper() not in self.__class__.SIZEZ:
            raise ValueError(f"Please choose one of the following options: {self.__class__.SIZEZ}")
        self.size = size.upper()

    def dict(self) -> dict:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏–Ω—Å—Ç–∞–Ω—Å–∞ –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è
        """
        return {
            "name": self.__class__.__name__,
            "logo": self.__class__.logo,
            "ingredients": self.__class__.ingredients,
            "size": self.size
        }

     

    def __eq__(self, other: object) -> bool:
        """
        –°—á–∏—Ç–∞–µ–º —á—Ç–æ –¥–≤–µ –ø–∏—Ü—Ü—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã, 
        –µ—Å–ª–∏ –æ–Ω–∏ –∏–∑ –æ–¥–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –∏ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
        """
        return (
            type(self) == type(other)
            and (self.size, set(self.ingredients)) == (other.size, set(other.ingredients))
            # –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç—ã??
        )


class Margherita(Pizza):
    """
    –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞
    """
    ingredients = ["tomato sauce", "mozzarella", "tomatoes"]
    logo = "üßÄ"
    name = "Margherita"


class Pepperoni(Pizza):
    """
    –ü–µ–ø–ø–µ—Ä–æ–Ω–∏
    """

    ingredients = ["tomato sauce", "mozzarella", "pepperoni"]
    logo = "üçï"
    name = "Pepperoni"


class Hawaiian(Pizza):
    """–≥–∞–≤–∞–π—Å–∫–∞—è –ø–∏—Ü—Ü–∞"""

    ingredients = ["tomato sauce", "mozzarella", "chicken", "pineapples"]
    logo = "üçç"
    name = "Hawaiian"




def log(foo):
    """
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—á–∞—Ç–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ
    –°–∞–º–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è
    """
    def wrapper(*args, **kwargs):
        random_time = randint(1, 10)
        print(f"{foo.__name__} -- {random_time} c")
    return wrapper

def apply_transform(text_str):
    """
    –ü–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç 
    —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –≤ –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–π —à–∞–±–ª–æ–Ω.
    –°–∞–º–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è
    """
    def decorator(foo):
        def wrapper(*args, **kwargs):
            print(text_str.format(randint(1, 10)))
        return wrapper
    return decorator



@log
def bake(pizza: Pizza) -> None:
    """–ì–æ—Ç–æ–≤–∏—Ç –ø–∏—Ü—Ü—É"""
    pass

@apply_transform("üßë‚Äçüç≥–ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ {}—Å!")
def beautiful_bake(pizza: Pizza) -> None:
    """–ì–æ—Ç–æ–≤–∏—Ç –ø–∏—Ü—Ü—É"""
    pass

@apply_transform("üöö –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ {}—Å!")
def beautiful_delivery(pizza: Pizza) -> None:
    """–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""
    pass

@apply_transform("üè† –ó–∞–±—Ä–∞–ª–∏ –∑–∞ {}—Å!")
def beautiful_pickup(pizza: Pizza) -> None:
    """–û—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""
    pass

if __name__ == '__main__':
    a = Hawaiian()
    b = Pepperoni("L")
    c = Pepperoni("XL")
    d = Margherita()
    print(a.logo, b.logo, c.logo, d.logo)
    print(a.dict())
    print(a == b)
    print(c == b)
    bake(a)
    beautiful_bake(b)
    beautiful_delivery()
    beautiful_pickup()