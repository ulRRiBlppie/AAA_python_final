import pytest
import pizza
import re


@pytest.mark.parametrize(
    "some_pizza, expected_value",
    [
        (pizza.Margherita().dict(),
            {
                "ingredients": ["tomato sauce", "mozzarella", "tomatoes"],
                "logo": "üßÄ",
                "name": "Margherita",
                "size": "L"
            }
         ),
        (pizza.Margherita("XL").dict(),
            {
                "ingredients": ["tomato sauce", "mozzarella", "tomatoes"],
                "logo": "üßÄ",
                "name": "Margherita",
                "size": "XL"
            }
         ),
        (pizza.Pepperoni().dict(),
            {
                "ingredients": ["tomato sauce", "mozzarella", "pepperoni"],
                "logo": "üçï",
                "name": "Pepperoni",
                "size": "L"
            }
         ),
        (pizza.Hawaiian().dict(),
            {
                "ingredients": ["tomato sauce",
                                "mozzarella",
                                "chicken",
                                "pineapples"],
                "logo": "üçç",
                "name": "Hawaiian",
                "size": "L"
            }
         ),
    ],
)
def test_pizza(some_pizza, expected_value):
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ —É –ø–∏—Ü—Ü –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã –∏
    —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: —Ä–∞–∑–º–µ—Ä, –ª–æ–≥–æ—Ç–∏–ø, –Ω–∞–∑–≤–∞–Ω–∏–µ
    """
    assert dict(some_pizza) == expected_value


def test_bake(capfd):
    pizza.beautiful_bake(pizza.Pepperoni)
    out, _ = capfd.readouterr()
    print(out)
    assert (
        1 == 1
        and out[:18] == "üßë‚Äçüç≥–ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ "
        and 0 <= int(out[18]) <= 9
        and out[19:] == "—Å!\n"
    )


def test_beautiful_bake(capfd):
    pizza.beautiful_bake(pizza.Pepperoni)
    out, _ = capfd.readouterr()
    print(out)
    assert bool(re.match(r"üßë‚Äçüç≥–ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ ([0-9]|10)—Å!", out))


def test_beautiful_delivery(capfd):
    pizza.beautiful_delivery(pizza.Pepperoni)
    out, _ = capfd.readouterr()
    print(out)
    assert bool(re.match(r"üöö –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ ([0-9]|10)—Å!", out))


def test_beautiful_pickup(capfd):
    pizza.beautiful_pickup(pizza.Pepperoni)
    out, = capfd.readouterr()
    print(out)
    assert bool(re.match(r"üè† –ó–∞–±—Ä–∞–ª–∏ –∑–∞ ([0-9]|10)—Å!", out))
